#!/bin/bash
# the function "round()" was taken from
# http://stempell.com/2009/08/rechnen-in-bash/

# the round function:
round()
{
  echo $(printf %.$2f $(echo "scale=$2;(((10^$2)*$1)+0.5)/(10^$2)" | bc))
};
usage()
{
  echo "mvi [options...] merge audio with image"
  echo "-v video file"
  echo "-i image file"
  echo "-c font color"
  echo "-s font size"
  echo "-b background color"
  echo "usage: RELEASE=15 LANG=2 pe7 merge_translate"
  echo "mvi -v video -i image -c fontcolor"
  exit
}
if [ $# -lt 1 ]; then
  usage
fi

while getopts v:i:c:s:b: option
do
case "${option}"
in
v) video=${OPTARG};;
i) image=${OPTARG};;
c) color=${OPTARG};;
s) fontsize=${OPTARG};;
s) bgcolor=${OPTARG};;
esac
done

if [ -z "$video" ]; then
  echo "no video file"
  usage
fi

if [ -z "$image" ]; then
  echo "no image file"
  usage
fi

vfile=$(basename $video)
if [ -z "$color" ]; then
  color="white"
fi

if [ -z "$bgcolor" ]; then
  bgcolor="black"
fi

title="${vfile%.*}"
width=$(identify -format "%w" $image)
chars=$(echo -n $title|wc -m|grep -oE "[0-9]+")
echo "image width=${width}"
MIN_FONT_SIZE=20
fontsize=$(round $width/$chars 0)
wwidth=$(echo "$chars*$MIN_FONT_SIZE" | bc -l)
if [ "$wwidth" -lt "$width" ]; then
  ffmpeg -loop 1 -i $image -i $video -c:v libx264 -tune stillimage -c:a aac  -pix_fmt yuv420p -shortest -vf "pad=ceil(iw/2)*2:ceil(ih/2)*2" -vf "drawtext=text="${title}":fontfile=/Library/Fonts/Arial\ Unicode.ttf:fontsize=${fontsize}:fontcolor=${color}@1:x=(w-text_w)/2:y=h-th-1:box=1:boxcolor=black@0.8" $title.mp4
else
  ffmpeg -loop 1 -i $image -i $video -c:v libx264 -tune stillimage -c:a aac  -pix_fmt yuv420p -shortest -vf "pad=ceil(iw/2)*2:ceil(ih/2)*2" -vf "drawtext=text="${title}":fontfile=/Library/Fonts/Arial\ Unicode.ttf:fontsize=40:fontcolor=white@1:x=w-mod(50*t\, (w+text_w)):y=h-th-1:box=1:boxcolor=black@0.8" $title.mp4
fi

